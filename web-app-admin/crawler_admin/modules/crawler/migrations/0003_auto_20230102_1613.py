# Generated by Django 3.2.15 on 2023-01-02 16:13

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('crawler', '0002_pageinfo_sitemap'),
    ]

    operations = [
        migrations.CreateModel(
            name='Scraper',
            fields=[
                ('id', models.CharField(default='586211', editable=False, max_length=12, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=256)),
                ('scheduler_type', models.CharField(choices=[('once', 'Once'), ('hourly', 'Hourly'), ('daily', 'Daily')], default='once', max_length=50)),
                ('start_time', models.TimeField()),
                ('start_date', models.DateField()),
                ('job_id', models.CharField(max_length=256)),
                ('is_active', models.BooleanField(default=False, verbose_name='Active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.AlterField(
            model_name='pageinfo',
            name='id',
            field=models.CharField(default='25881457', editable=False, max_length=12, primary_key=True, serialize=False, unique=True),
        ),
        migrations.CreateModel(
            name='ScraperSitemap',
            fields=[
                ('id', models.CharField(default='104553', editable=False, max_length=12, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('scraper', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crawler.scraper')),
                ('sitemap', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crawler.sitemap')),
            ],
        ),
        migrations.AddField(
            model_name='scraper',
            name='sitemap_cells',
            field=models.ManyToManyField(through='crawler.ScraperSitemap', to='crawler.Sitemap'),
        ),
    ]
