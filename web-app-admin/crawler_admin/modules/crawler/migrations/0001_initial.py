# Generated by Django 3.2.15 on 2022-09-28 15:24

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='crawler.category')),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='GroupProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50)),
                ('agencies', django.contrib.postgres.fields.ArrayField(base_field=django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=10), blank=True, size=10), default=list, size=100)),
                ('product_ids', django.contrib.postgres.fields.ArrayField(base_field=django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=10), blank=True, size=8), default=list, size=1000)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crawler.category')),
            ],
        ),
        migrations.CreateModel(
            name='RawProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(max_length=512, verbose_name='URL')),
                ('base_encoded_url', models.CharField(max_length=512, verbose_name='Encode URL')),
                ('data', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Scraper',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('homepage', models.CharField(max_length=256)),
                ('scraper_type', models.CharField(choices=[('api', 'API'), ('html', 'HTML')], default='api', max_length=50)),
                ('crawl_type', models.CharField(choices=[('all', 'All'), ('latest', 'Latest')], default='latest', max_length=50)),
                ('scheduler_type', models.CharField(choices=[('once', 'Once'), ('hourly', 'Hourly'), ('daily', 'Daily')], default='once', max_length=50)),
                ('start_time', models.TimeField()),
                ('start_date', models.DateField()),
                ('job_id', models.CharField(max_length=256)),
                ('is_active', models.BooleanField(default=False, verbose_name='Active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Shop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=256)),
                ('address', models.CharField(blank=True, max_length=256)),
                ('agency', models.CharField(blank=True, max_length=256)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Spider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('url', models.CharField(max_length=512, verbose_name='URL')),
                ('limit_per_request', models.IntegerField(default=30, verbose_name='Limit per page')),
                ('start_page', models.IntegerField(default=0, verbose_name='Start page')),
                ('end_page', models.IntegerField(default=100, verbose_name='End page')),
                ('domain', models.CharField(default='', max_length=256, verbose_name='Domain')),
                ('agency', models.CharField(default='', max_length=256, verbose_name='Agency')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ScraperSpider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crawler.category')),
                ('scraper', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crawler.scraper')),
                ('spider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crawler.spider')),
            ],
        ),
        migrations.AddField(
            model_name='scraper',
            name='spiders',
            field=models.ManyToManyField(through='crawler.ScraperSpider', to='crawler.Spider'),
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Name')),
                ('clean_name', models.CharField(max_length=256, verbose_name='Clean Name')),
                ('url', models.CharField(max_length=512, verbose_name='URL')),
                ('base_encoded_url', models.CharField(max_length=512, verbose_name='Encode URL')),
                ('domain', models.CharField(max_length=256, verbose_name='Domain')),
                ('agency', models.CharField(max_length=256, verbose_name='Agency')),
                ('product_code', models.CharField(max_length=256, verbose_name='Code')),
                ('is_api', models.BooleanField(default=True, verbose_name='From API')),
                ('slug_id', models.TextField(blank=True, default='')),
                ('image', models.TextField(blank=True, default='')),
                ('shop', models.TextField(blank=True, default='', null=True)),
                ('item_rating', models.TextField(blank=True, default='')),
                ('description', models.TextField(blank=True, default='')),
                ('stock', models.CharField(blank=True, default='', max_length=100)),
                ('historical_sold', models.CharField(blank=True, default='', max_length=100)),
                ('liked_count', models.CharField(blank=True, default='', max_length=100)),
                ('price', models.CharField(blank=True, default='', max_length=100)),
                ('list_price', models.CharField(blank=True, default='', max_length=100)),
                ('score', models.CharField(blank=True, default='', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crawler.brand')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crawler.category')),
                ('group_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='crawler.groupproduct')),
            ],
        ),
        migrations.CreateModel(
            name='Parser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('selector_type', models.CharField(choices=[('xpath', 'XPATH'), ('css', 'CSS')], default='xpath', max_length=50)),
                ('selector', models.CharField(max_length=256)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('spider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crawler.spider')),
            ],
        ),
        migrations.AddField(
            model_name='brand',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crawler.category'),
        ),
    ]
